{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isFocusable = isFocusable;\nexports.isClickableInput = isClickableInput;\nexports.getMouseEventOptions = getMouseEventOptions;\nexports.isLabelWithInternallyDisabledControl = isLabelWithInternallyDisabledControl;\nexports.getActiveElement = getActiveElement;\nexports.calculateNewValue = calculateNewValue;\nexports.setSelectionRangeIfNecessary = setSelectionRangeIfNecessary;\nexports.eventWrapper = eventWrapper;\nexports.isValidDateValue = isValidDateValue;\nexports.isValidInputTimeValue = isValidInputTimeValue;\nexports.buildTimeValue = buildTimeValue;\nexports.getValue = getValue;\nexports.getSelectionRange = getSelectionRange;\nexports.isContentEditable = isContentEditable;\nexports.isInstanceOfElement = isInstanceOfElement;\nexports.isVisible = isVisible;\nexports.FOCUSABLE_SELECTOR = void 0;\nvar _dom = require(\"@testing-library/dom\");\nvar _helpers = require(\"@testing-library/dom/dist/helpers\");\n\n// isInstanceOfElement can be removed once the peerDependency for @testing-library/dom is bumped to a version that includes https://github.com/testing-library/dom-testing-library/pull/885\n\n/**\n * Check if an element is of a given type.\n *\n * @param {Element} element The element to test\n * @param {string} elementType Constructor name. E.g. 'HTMLSelectElement'\n */\nfunction isInstanceOfElement(element, elementType) {\n  try {\n    const window = (0, _helpers.getWindowFromNode)(element); // Window usually has the element constructors as properties but is not required to do so per specs\n\n    if (typeof window[elementType] === 'function') {\n      return element instanceof window[elementType];\n    }\n  } catch (e) {// The document might not be associated with a window\n  } // Fall back to the constructor name as workaround for test environments that\n  // a) not associate the document with a window\n  // b) not provide the constructor as property of window\n\n  if (/^HTML(\\w+)Element$/.test(element.constructor.name)) {\n    return element.constructor.name === elementType;\n  } // The user passed some node that is not created in a browser-like environment\n\n  throw new Error(`Unable to verify if element is instance of ${elementType}. Please file an issue describing your test environment: https://github.com/testing-library/dom-testing-library/issues/new`);\n}\nfunction isMousePressEvent(event) {\n  return event === 'mousedown' || event === 'mouseup' || event === 'click' || event === 'dblclick';\n}\nfunction invert(map) {\n  const res = {};\n  for (const key of Object.keys(map)) {\n    res[map[key]] = key;\n  }\n  return res;\n} // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n\nconst BUTTONS_TO_NAMES = {\n  0: 'none',\n  1: 'primary',\n  2: 'secondary',\n  4: 'auxiliary'\n};\nconst NAMES_TO_BUTTONS = invert(BUTTONS_TO_NAMES); // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\nconst BUTTON_TO_NAMES = {\n  0: 'primary',\n  1: 'auxiliary',\n  2: 'secondary'\n};\nconst NAMES_TO_BUTTON = invert(BUTTON_TO_NAMES);\nfunction convertMouseButtons(event, init, property, mapping) {\n  if (!isMousePressEvent(event)) {\n    return 0;\n  }\n  if (init[property] != null) {\n    return init[property];\n  }\n  if (init.buttons != null) {\n    // not sure how to test this. Feel free to try and add a test if you want.\n    // istanbul ignore next\n    return mapping[BUTTONS_TO_NAMES[init.buttons]] || 0;\n  }\n  if (init.button != null) {\n    // not sure how to test this. Feel free to try and add a test if you want.\n    // istanbul ignore next\n    return mapping[BUTTON_TO_NAMES[init.button]] || 0;\n  }\n  return property != 'button' && isMousePressEvent(event) ? 1 : 0;\n}\nfunction getMouseEventOptions(event, init) {\n  let clickCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  init = init || {};\n  return {\n    ...init,\n    // https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n    detail: event === 'mousedown' || event === 'mouseup' || event === 'click' ? 1 + clickCount : clickCount,\n    buttons: convertMouseButtons(event, init, 'buttons', NAMES_TO_BUTTONS),\n    button: convertMouseButtons(event, init, 'button', NAMES_TO_BUTTON)\n  };\n} // Absolutely NO events fire on label elements that contain their control\n// if that control is disabled. NUTS!\n// no joke. There are NO events for: <label><input disabled /><label>\n\nfunction isLabelWithInternallyDisabledControl(element) {\n  var _element$control;\n  return element.tagName === 'LABEL' && ((_element$control = element.control) == null ? void 0 : _element$control.disabled) && element.contains(element.control);\n}\nfunction getActiveElement(document) {\n  const activeElement = document.activeElement;\n  if (activeElement != null && activeElement.shadowRoot) {\n    return getActiveElement(activeElement.shadowRoot);\n  } else {\n    return activeElement;\n  }\n}\nfunction supportsMaxLength(element) {\n  if (element.tagName === 'TEXTAREA') return true;\n  if (element.tagName === 'INPUT') {\n    const type = element.getAttribute('type'); // Missing value default is \"text\"\n\n    if (!type) return true; // https://html.spec.whatwg.org/multipage/input.html#concept-input-apply\n\n    if (type.match(/email|password|search|telephone|text|url/)) return true;\n  }\n  return false;\n}\nfunction getSelectionRange(element) {\n  if (isContentEditable(element)) {\n    const range = element.ownerDocument.getSelection().getRangeAt(0);\n    return {\n      selectionStart: range.startOffset,\n      selectionEnd: range.endOffset\n    };\n  }\n  return {\n    selectionStart: element.selectionStart,\n    selectionEnd: element.selectionEnd\n  };\n} //jsdom is not supporting isContentEditable\n\nfunction isContentEditable(element) {\n  return element.hasAttribute('contenteditable') && (element.getAttribute('contenteditable') == 'true' || element.getAttribute('contenteditable') == '');\n}\nfunction getValue(element) {\n  if (isContentEditable(element)) {\n    return element.textContent;\n  }\n  return element.value;\n}\nfunction calculateNewValue(newEntry, element) {\n  var _element$getAttribute;\n  const {\n    selectionStart,\n    selectionEnd\n  } = getSelectionRange(element);\n  const value = getValue(element); // can't use .maxLength property because of a jsdom bug:\n  // https://github.com/jsdom/jsdom/issues/2927\n\n  const maxLength = Number((_element$getAttribute = element.getAttribute('maxlength')) != null ? _element$getAttribute : -1);\n  let newValue, newSelectionStart;\n  if (selectionStart === null) {\n    // at the end of an input type that does not support selection ranges\n    // https://github.com/testing-library/user-event/issues/316#issuecomment-639744793\n    newValue = value + newEntry;\n  } else if (selectionStart === selectionEnd) {\n    if (selectionStart === 0) {\n      // at the beginning of the input\n      newValue = newEntry + value;\n    } else if (selectionStart === value.length) {\n      // at the end of the input\n      newValue = value + newEntry;\n    } else {\n      // in the middle of the input\n      newValue = value.slice(0, selectionStart) + newEntry + value.slice(selectionEnd);\n    }\n    newSelectionStart = selectionStart + newEntry.length;\n  } else {\n    // we have something selected\n    const firstPart = value.slice(0, selectionStart) + newEntry;\n    newValue = firstPart + value.slice(selectionEnd);\n    newSelectionStart = firstPart.length;\n  }\n  if (element.type === 'date' && !isValidDateValue(element, newValue)) {\n    newValue = value;\n  }\n  if (element.type === 'time' && !isValidInputTimeValue(element, newValue)) {\n    if (isValidInputTimeValue(element, newEntry)) {\n      newValue = newEntry;\n    } else {\n      newValue = value;\n    }\n  }\n  if (!supportsMaxLength(element) || maxLength < 0) {\n    return {\n      newValue,\n      newSelectionStart\n    };\n  } else {\n    return {\n      newValue: newValue.slice(0, maxLength),\n      newSelectionStart: newSelectionStart > maxLength ? maxLength : newSelectionStart\n    };\n  }\n}\nfunction setSelectionRangeIfNecessary(element, newSelectionStart, newSelectionEnd) {\n  const {\n    selectionStart,\n    selectionEnd\n  } = getSelectionRange(element);\n  if (!isContentEditable(element) && (!element.setSelectionRange || selectionStart === null)) {\n    // cannot set selection\n    return;\n  }\n  if (selectionStart !== newSelectionStart || selectionEnd !== newSelectionStart) {\n    if (isContentEditable(element)) {\n      const range = element.ownerDocument.createRange();\n      range.selectNodeContents(element);\n      range.setStart(element.firstChild, newSelectionStart);\n      range.setEnd(element.firstChild, newSelectionEnd);\n      element.ownerDocument.getSelection().removeAllRanges();\n      element.ownerDocument.getSelection().addRange(range);\n    } else {\n      element.setSelectionRange(newSelectionStart, newSelectionEnd);\n    }\n  }\n}\nconst FOCUSABLE_SELECTOR = ['input:not([type=hidden]):not([disabled])', 'button:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', '[contenteditable=\"\"]', '[contenteditable=\"true\"]', 'a[href]', '[tabindex]:not([disabled])'].join(', ');\nexports.FOCUSABLE_SELECTOR = FOCUSABLE_SELECTOR;\nfunction isFocusable(element) {\n  return !isLabelWithInternallyDisabledControl(element) && (element == null ? void 0 : element.matches(FOCUSABLE_SELECTOR));\n}\nconst CLICKABLE_INPUT_TYPES = ['button', 'color', 'file', 'image', 'reset', 'submit'];\nfunction isClickableInput(element) {\n  return element.tagName === 'BUTTON' || isInstanceOfElement(element, 'HTMLInputElement') && CLICKABLE_INPUT_TYPES.includes(element.type);\n}\nfunction isVisible(element) {\n  const getComputedStyle = (0, _helpers.getWindowFromNode)(element).getComputedStyle;\n  for (; element && element.ownerDocument; element = element.parentNode) {\n    const display = getComputedStyle(element).display;\n    if (display === 'none') {\n      return false;\n    }\n  }\n  return true;\n}\nfunction eventWrapper(cb) {\n  let result;\n  (0, _dom.getConfig)().eventWrapper(() => {\n    result = cb();\n  });\n  return result;\n}\nfunction isValidDateValue(element, value) {\n  if (element.type !== 'date') return false;\n  const clone = element.cloneNode();\n  clone.value = value;\n  return clone.value === value;\n}\nfunction buildTimeValue(value) {\n  function build(onlyDigitsValue, index) {\n    const hours = onlyDigitsValue.slice(0, index);\n    const validHours = Math.min(parseInt(hours, 10), 23);\n    const minuteCharacters = onlyDigitsValue.slice(index);\n    const parsedMinutes = parseInt(minuteCharacters, 10);\n    const validMinutes = Math.min(parsedMinutes, 59);\n    return `${validHours.toString().padStart(2, '0')}:${validMinutes.toString().padStart(2, '0')}`;\n  }\n  const onlyDigitsValue = value.replace(/\\D/g, '');\n  if (onlyDigitsValue.length < 2) {\n    return value;\n  }\n  const firstDigit = parseInt(onlyDigitsValue[0], 10);\n  const secondDigit = parseInt(onlyDigitsValue[1], 10);\n  if (firstDigit >= 3 || firstDigit === 2 && secondDigit >= 4) {\n    let index;\n    if (firstDigit >= 3) {\n      index = 1;\n    } else {\n      index = 2;\n    }\n    return build(onlyDigitsValue, index);\n  }\n  if (value.length === 2) {\n    return value;\n  }\n  return build(onlyDigitsValue, 2);\n}\nfunction isValidInputTimeValue(element, timeValue) {\n  if (element.type !== 'time') return false;\n  const clone = element.cloneNode();\n  clone.value = timeValue;\n  return clone.value === timeValue;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","isFocusable","isClickableInput","getMouseEventOptions","isLabelWithInternallyDisabledControl","getActiveElement","calculateNewValue","setSelectionRangeIfNecessary","eventWrapper","isValidDateValue","isValidInputTimeValue","buildTimeValue","getValue","getSelectionRange","isContentEditable","isInstanceOfElement","isVisible","FOCUSABLE_SELECTOR","_dom","require","_helpers","element","elementType","window","getWindowFromNode","e","test","constructor","name","Error","isMousePressEvent","event","invert","map","res","key","keys","BUTTONS_TO_NAMES","NAMES_TO_BUTTONS","BUTTON_TO_NAMES","NAMES_TO_BUTTON","convertMouseButtons","init","property","mapping","buttons","button","clickCount","arguments","length","undefined","detail","_element$control","tagName","control","disabled","contains","document","activeElement","shadowRoot","supportsMaxLength","type","getAttribute","match","range","ownerDocument","getSelection","getRangeAt","selectionStart","startOffset","selectionEnd","endOffset","hasAttribute","textContent","newEntry","_element$getAttribute","maxLength","Number","newValue","newSelectionStart","slice","firstPart","newSelectionEnd","setSelectionRange","createRange","selectNodeContents","setStart","firstChild","setEnd","removeAllRanges","addRange","join","matches","CLICKABLE_INPUT_TYPES","includes","getComputedStyle","parentNode","display","cb","result","getConfig","clone","cloneNode","build","onlyDigitsValue","index","hours","validHours","Math","min","parseInt","minuteCharacters","parsedMinutes","validMinutes","toString","padStart","replace","firstDigit","secondDigit","timeValue"],"sources":["C:/Users/1000071428/Downloads/01-starting-project (2)/01-starting-project/node_modules/@testing-library/user-event/dist/utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isFocusable = isFocusable;\nexports.isClickableInput = isClickableInput;\nexports.getMouseEventOptions = getMouseEventOptions;\nexports.isLabelWithInternallyDisabledControl = isLabelWithInternallyDisabledControl;\nexports.getActiveElement = getActiveElement;\nexports.calculateNewValue = calculateNewValue;\nexports.setSelectionRangeIfNecessary = setSelectionRangeIfNecessary;\nexports.eventWrapper = eventWrapper;\nexports.isValidDateValue = isValidDateValue;\nexports.isValidInputTimeValue = isValidInputTimeValue;\nexports.buildTimeValue = buildTimeValue;\nexports.getValue = getValue;\nexports.getSelectionRange = getSelectionRange;\nexports.isContentEditable = isContentEditable;\nexports.isInstanceOfElement = isInstanceOfElement;\nexports.isVisible = isVisible;\nexports.FOCUSABLE_SELECTOR = void 0;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _helpers = require(\"@testing-library/dom/dist/helpers\");\n\n// isInstanceOfElement can be removed once the peerDependency for @testing-library/dom is bumped to a version that includes https://github.com/testing-library/dom-testing-library/pull/885\n\n/**\n * Check if an element is of a given type.\n *\n * @param {Element} element The element to test\n * @param {string} elementType Constructor name. E.g. 'HTMLSelectElement'\n */\nfunction isInstanceOfElement(element, elementType) {\n  try {\n    const window = (0, _helpers.getWindowFromNode)(element); // Window usually has the element constructors as properties but is not required to do so per specs\n\n    if (typeof window[elementType] === 'function') {\n      return element instanceof window[elementType];\n    }\n  } catch (e) {// The document might not be associated with a window\n  } // Fall back to the constructor name as workaround for test environments that\n  // a) not associate the document with a window\n  // b) not provide the constructor as property of window\n\n\n  if (/^HTML(\\w+)Element$/.test(element.constructor.name)) {\n    return element.constructor.name === elementType;\n  } // The user passed some node that is not created in a browser-like environment\n\n\n  throw new Error(`Unable to verify if element is instance of ${elementType}. Please file an issue describing your test environment: https://github.com/testing-library/dom-testing-library/issues/new`);\n}\n\nfunction isMousePressEvent(event) {\n  return event === 'mousedown' || event === 'mouseup' || event === 'click' || event === 'dblclick';\n}\n\nfunction invert(map) {\n  const res = {};\n\n  for (const key of Object.keys(map)) {\n    res[map[key]] = key;\n  }\n\n  return res;\n} // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n\n\nconst BUTTONS_TO_NAMES = {\n  0: 'none',\n  1: 'primary',\n  2: 'secondary',\n  4: 'auxiliary'\n};\nconst NAMES_TO_BUTTONS = invert(BUTTONS_TO_NAMES); // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\nconst BUTTON_TO_NAMES = {\n  0: 'primary',\n  1: 'auxiliary',\n  2: 'secondary'\n};\nconst NAMES_TO_BUTTON = invert(BUTTON_TO_NAMES);\n\nfunction convertMouseButtons(event, init, property, mapping) {\n  if (!isMousePressEvent(event)) {\n    return 0;\n  }\n\n  if (init[property] != null) {\n    return init[property];\n  }\n\n  if (init.buttons != null) {\n    // not sure how to test this. Feel free to try and add a test if you want.\n    // istanbul ignore next\n    return mapping[BUTTONS_TO_NAMES[init.buttons]] || 0;\n  }\n\n  if (init.button != null) {\n    // not sure how to test this. Feel free to try and add a test if you want.\n    // istanbul ignore next\n    return mapping[BUTTON_TO_NAMES[init.button]] || 0;\n  }\n\n  return property != 'button' && isMousePressEvent(event) ? 1 : 0;\n}\n\nfunction getMouseEventOptions(event, init, clickCount = 0) {\n  init = init || {};\n  return { ...init,\n    // https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n    detail: event === 'mousedown' || event === 'mouseup' || event === 'click' ? 1 + clickCount : clickCount,\n    buttons: convertMouseButtons(event, init, 'buttons', NAMES_TO_BUTTONS),\n    button: convertMouseButtons(event, init, 'button', NAMES_TO_BUTTON)\n  };\n} // Absolutely NO events fire on label elements that contain their control\n// if that control is disabled. NUTS!\n// no joke. There are NO events for: <label><input disabled /><label>\n\n\nfunction isLabelWithInternallyDisabledControl(element) {\n  var _element$control;\n\n  return element.tagName === 'LABEL' && ((_element$control = element.control) == null ? void 0 : _element$control.disabled) && element.contains(element.control);\n}\n\nfunction getActiveElement(document) {\n  const activeElement = document.activeElement;\n\n  if (activeElement != null && activeElement.shadowRoot) {\n    return getActiveElement(activeElement.shadowRoot);\n  } else {\n    return activeElement;\n  }\n}\n\nfunction supportsMaxLength(element) {\n  if (element.tagName === 'TEXTAREA') return true;\n\n  if (element.tagName === 'INPUT') {\n    const type = element.getAttribute('type'); // Missing value default is \"text\"\n\n    if (!type) return true; // https://html.spec.whatwg.org/multipage/input.html#concept-input-apply\n\n    if (type.match(/email|password|search|telephone|text|url/)) return true;\n  }\n\n  return false;\n}\n\nfunction getSelectionRange(element) {\n  if (isContentEditable(element)) {\n    const range = element.ownerDocument.getSelection().getRangeAt(0);\n    return {\n      selectionStart: range.startOffset,\n      selectionEnd: range.endOffset\n    };\n  }\n\n  return {\n    selectionStart: element.selectionStart,\n    selectionEnd: element.selectionEnd\n  };\n} //jsdom is not supporting isContentEditable\n\n\nfunction isContentEditable(element) {\n  return element.hasAttribute('contenteditable') && (element.getAttribute('contenteditable') == 'true' || element.getAttribute('contenteditable') == '');\n}\n\nfunction getValue(element) {\n  if (isContentEditable(element)) {\n    return element.textContent;\n  }\n\n  return element.value;\n}\n\nfunction calculateNewValue(newEntry, element) {\n  var _element$getAttribute;\n\n  const {\n    selectionStart,\n    selectionEnd\n  } = getSelectionRange(element);\n  const value = getValue(element); // can't use .maxLength property because of a jsdom bug:\n  // https://github.com/jsdom/jsdom/issues/2927\n\n  const maxLength = Number((_element$getAttribute = element.getAttribute('maxlength')) != null ? _element$getAttribute : -1);\n  let newValue, newSelectionStart;\n\n  if (selectionStart === null) {\n    // at the end of an input type that does not support selection ranges\n    // https://github.com/testing-library/user-event/issues/316#issuecomment-639744793\n    newValue = value + newEntry;\n  } else if (selectionStart === selectionEnd) {\n    if (selectionStart === 0) {\n      // at the beginning of the input\n      newValue = newEntry + value;\n    } else if (selectionStart === value.length) {\n      // at the end of the input\n      newValue = value + newEntry;\n    } else {\n      // in the middle of the input\n      newValue = value.slice(0, selectionStart) + newEntry + value.slice(selectionEnd);\n    }\n\n    newSelectionStart = selectionStart + newEntry.length;\n  } else {\n    // we have something selected\n    const firstPart = value.slice(0, selectionStart) + newEntry;\n    newValue = firstPart + value.slice(selectionEnd);\n    newSelectionStart = firstPart.length;\n  }\n\n  if (element.type === 'date' && !isValidDateValue(element, newValue)) {\n    newValue = value;\n  }\n\n  if (element.type === 'time' && !isValidInputTimeValue(element, newValue)) {\n    if (isValidInputTimeValue(element, newEntry)) {\n      newValue = newEntry;\n    } else {\n      newValue = value;\n    }\n  }\n\n  if (!supportsMaxLength(element) || maxLength < 0) {\n    return {\n      newValue,\n      newSelectionStart\n    };\n  } else {\n    return {\n      newValue: newValue.slice(0, maxLength),\n      newSelectionStart: newSelectionStart > maxLength ? maxLength : newSelectionStart\n    };\n  }\n}\n\nfunction setSelectionRangeIfNecessary(element, newSelectionStart, newSelectionEnd) {\n  const {\n    selectionStart,\n    selectionEnd\n  } = getSelectionRange(element);\n\n  if (!isContentEditable(element) && (!element.setSelectionRange || selectionStart === null)) {\n    // cannot set selection\n    return;\n  }\n\n  if (selectionStart !== newSelectionStart || selectionEnd !== newSelectionStart) {\n    if (isContentEditable(element)) {\n      const range = element.ownerDocument.createRange();\n      range.selectNodeContents(element);\n      range.setStart(element.firstChild, newSelectionStart);\n      range.setEnd(element.firstChild, newSelectionEnd);\n      element.ownerDocument.getSelection().removeAllRanges();\n      element.ownerDocument.getSelection().addRange(range);\n    } else {\n      element.setSelectionRange(newSelectionStart, newSelectionEnd);\n    }\n  }\n}\n\nconst FOCUSABLE_SELECTOR = ['input:not([type=hidden]):not([disabled])', 'button:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', '[contenteditable=\"\"]', '[contenteditable=\"true\"]', 'a[href]', '[tabindex]:not([disabled])'].join(', ');\nexports.FOCUSABLE_SELECTOR = FOCUSABLE_SELECTOR;\n\nfunction isFocusable(element) {\n  return !isLabelWithInternallyDisabledControl(element) && (element == null ? void 0 : element.matches(FOCUSABLE_SELECTOR));\n}\n\nconst CLICKABLE_INPUT_TYPES = ['button', 'color', 'file', 'image', 'reset', 'submit'];\n\nfunction isClickableInput(element) {\n  return element.tagName === 'BUTTON' || isInstanceOfElement(element, 'HTMLInputElement') && CLICKABLE_INPUT_TYPES.includes(element.type);\n}\n\nfunction isVisible(element) {\n  const getComputedStyle = (0, _helpers.getWindowFromNode)(element).getComputedStyle;\n\n  for (; element && element.ownerDocument; element = element.parentNode) {\n    const display = getComputedStyle(element).display;\n\n    if (display === 'none') {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction eventWrapper(cb) {\n  let result;\n  (0, _dom.getConfig)().eventWrapper(() => {\n    result = cb();\n  });\n  return result;\n}\n\nfunction isValidDateValue(element, value) {\n  if (element.type !== 'date') return false;\n  const clone = element.cloneNode();\n  clone.value = value;\n  return clone.value === value;\n}\n\nfunction buildTimeValue(value) {\n  function build(onlyDigitsValue, index) {\n    const hours = onlyDigitsValue.slice(0, index);\n    const validHours = Math.min(parseInt(hours, 10), 23);\n    const minuteCharacters = onlyDigitsValue.slice(index);\n    const parsedMinutes = parseInt(minuteCharacters, 10);\n    const validMinutes = Math.min(parsedMinutes, 59);\n    return `${validHours.toString().padStart(2, '0')}:${validMinutes.toString().padStart(2, '0')}`;\n  }\n\n  const onlyDigitsValue = value.replace(/\\D/g, '');\n\n  if (onlyDigitsValue.length < 2) {\n    return value;\n  }\n\n  const firstDigit = parseInt(onlyDigitsValue[0], 10);\n  const secondDigit = parseInt(onlyDigitsValue[1], 10);\n\n  if (firstDigit >= 3 || firstDigit === 2 && secondDigit >= 4) {\n    let index;\n\n    if (firstDigit >= 3) {\n      index = 1;\n    } else {\n      index = 2;\n    }\n\n    return build(onlyDigitsValue, index);\n  }\n\n  if (value.length === 2) {\n    return value;\n  }\n\n  return build(onlyDigitsValue, 2);\n}\n\nfunction isValidInputTimeValue(element, timeValue) {\n  if (element.type !== 'time') return false;\n  const clone = element.cloneNode();\n  clone.value = timeValue;\n  return clone.value === timeValue;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}